/**
 * MessagingLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const FieldError = require('../lib/Models/FieldError');
const Media = require('../lib/Models/Media');
const Tag = require('../lib/Models/Tag');
const DeferredResult = require('../lib/Models/DeferredResult');
const BandwidthCallbackMessage = require('../lib/Models/BandwidthCallbackMessage');
const BandwidthMessage = require('../lib/Models/BandwidthMessage');
const MessageRequest = require('../lib/Models/MessageRequest');
const GenericClientException = require('../lib/Exceptions/GenericClientException');
const PathClientException = require('../lib/Exceptions/PathClientException');

const classMap = {
    FieldError,
    Media,
    Tag,
    DeferredResult,
    BandwidthCallbackMessage,
    BandwidthMessage,
    MessageRequest,
    GenericClientException,
    PathClientException,
};

/**
 * Factory class to create instances of models and exception classes
 */
class ModelFactory {
    /**
     * Creates instance of a model class
     * @param  modelName  {string}  Name of class to instantiate
     * @returns  {object} Instance of the model class
     */
    static getInstance(modelName) {
        return new classMap[modelName]();
    }
}

module.exports = ModelFactory;
