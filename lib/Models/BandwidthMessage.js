/**
 * MessagingLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of BandwidthMessage
 */
class BandwidthMessage extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.id = this.constructor.getValue(obj.id);
        this.owner = this.constructor.getValue(obj.owner);
        this.applicationId = this.constructor.getValue(obj.applicationId);
        this.time = this.constructor.getValue(obj.time);
        this.segmentCount = this.constructor.getValue(obj.segmentCount);
        this.direction = this.constructor.getValue(obj.direction);
        this.to = this.constructor.getValue(obj.to);
        this.from = this.constructor.getValue(obj.from);
        this.media = this.constructor.getValue(obj.media);
        this.text = this.constructor.getValue(obj.text);
        this.tag = this.constructor.getValue(obj.tag);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'id', realName: 'id' },
            { name: 'owner', realName: 'owner' },
            { name: 'applicationId', realName: 'applicationId' },
            { name: 'time', realName: 'time' },
            { name: 'segmentCount', realName: 'segmentCount' },
            { name: 'direction', realName: 'direction' },
            { name: 'to', realName: 'to', array: true },
            { name: 'from', realName: 'from' },
            { name: 'media', realName: 'media', array: true },
            { name: 'text', realName: 'text' },
            { name: 'tag', realName: 'tag' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = BandwidthMessage;
