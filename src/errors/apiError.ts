/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import JSONBig from 'json-bigint';
import { HttpContext } from '../http/httpContext';
import { HttpRequest } from '../http/httpRequest';
import { ApiResponse } from '../apiResponse';

/**
 * Thrown when the HTTP status code is not okay.
 *
 * The ApiError extends the ApiResponse interface, so all ApiResponse
 * properties are available.
 */
export class ApiError<T = {}> extends Error
  implements ApiResponse<T | undefined> {
  public request: HttpRequest;
  public statusCode: number;
  public headers: Record<string, string>;
  public result: T | undefined;
  public body: string | Blob | NodeJS.ReadableStream;

  constructor(context: HttpContext, message: string) {
    super(message);

    const { request, response } = context;
    this.request = request;
    this.statusCode = response.statusCode;
    this.headers = response.headers;
    this.body = response.body;

    if (typeof response.body === 'string' && response.body !== '') {
      const JSON = JSONBig({ useNativeBigInt: true });
      try {
        this.result = JSON.parse(response.body);
      } catch (error) {
        if (__DEV__) {
          if (console) {
            console.warn(
              `Unexpected error: Could not parse HTTP response body as JSON. ${error.message}`
            );
          }
        }
      }
    }
  }
}
